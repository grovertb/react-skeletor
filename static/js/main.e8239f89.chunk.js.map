{"version":3,"sources":["../../node_modules/style-inject/dist/style-inject.es.js","../../src/index.js","App.js","index.js"],"names":["css","ref","insertAt","document","head","getElementsByTagName","style","createElement","type","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","Skeleton","items","this","count","duration","defaultBaseColor","defaultHighlightColor","width","height","circle","styleItem","i","key","className","styles","Component","PropTypes","string","App","ReactDOM","render","getElementById"],"mappings":"8iCAAA,SAAqBA,EAAKC,QACX,IAARA,IAAiBA,EAAM,IAC5B,IAAIC,EAAWD,EAAIC,SAEnB,GAAKF,GAA2B,qBAAbG,SAAnB,CAEA,IAAIC,EAAOD,SAASC,MAAQD,SAASE,qBAAqB,QAAQ,GAC9DC,EAAQH,SAASI,cAAc,SACnCD,EAAME,KAAO,WAEI,QAAbN,GACEE,EAAKK,WACPL,EAAKM,aAAaJ,EAAOF,EAAKK,YAKhCL,EAAKO,YAAYL,GAGfA,EAAMM,WACRN,EAAMM,WAAWC,QAAUb,EAE3BM,EAAMK,YAAYR,SAASW,eAAed,K,0qBClBzBe,E,6cA4BXC,EAAN,G,EAUIC,KAXG,MAILC,EAJK,QAKLC,EALK,WAMLC,EANK,mBAOLC,EAPK,wBAQLC,EARK,QASLC,EATK,SAULC,EAVK,SAaDC,EAAY,C,qBAAA,E,0BAAA,E,6BAGhB,QAGF,MAAIH,IAAeG,WACnB,MAAIF,IAAgBE,YAChBH,iBAAkBC,GAAtB,IAAiDE,sB,IAE5C,IAAIC,EAAT,EAAgBA,EAAhB,EAA2BA,IACzBV,OACE,0BACEW,IADF,EAEEC,UAAWC,EACXvB,MAAOmB,GAJXT,W,OAUK,kCAAP,Q,8BA7DkCc,a,EAAjBf,cACA,CACjBG,MAAOa,IADU,OAEjBZ,SAAUY,IAFO,OAGjBT,MAAOS,cAAoB,CACzBA,IADyB,OAEzBA,IALe,SAOjBR,OAAQQ,cAAoB,CAC1BA,IAD0B,OAE1BA,IATe,SAWjBP,OAAQO,IAXS,KAYjBX,iBAAkBW,IAZD,OAajBV,sBAAuBU,IAAUC,S,EAdhBjB,iBAiBG,CACpBG,MADoB,EAEpBC,SAFoB,IAGpBG,MAHoB,KAIpBC,OAJoB,KAKpBC,QALoB,EAMpBJ,iBANoB,OAOpBC,sBAAuB,Y,QCzBNY,E,iLAEjB,OACE,kBAAC,WAAD,KACE,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAUX,MAAO,IAAKC,OAAQ,IAAKC,QAAM,IACzC,kBAAC,EAAD,CAAUN,MAAO,IACjB,kBAAC,EAAD,CAAUI,MAAO,IAAKC,OAAQ,U,GAPLO,aCEjCI,IAASC,OAAO,kBAAC,EAAD,MAAShC,SAASiC,eAAe,W","file":"static/js/main.e8239f89.chunk.js","sourcesContent":["function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import React, { Component, Fragment } from 'react'\nimport PropTypes from 'prop-types'\n\nimport styles from './styles.css'\n\nexport default class Skeleton extends Component {\n  static propTypes = {\n    count: PropTypes.number,\n    duration: PropTypes.number,\n    width: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number\n    ]),\n    height: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number\n    ]),\n    circle: PropTypes.bool,\n    defaultBaseColor: PropTypes.string,\n    defaultHighlightColor: PropTypes.string\n  }\n\n  static defaultProps = {\n    count: 1,\n    duration: 1.2,\n    width: null,\n    height: null,\n    circle: false,\n    defaultBaseColor: '#eee',\n    defaultHighlightColor: '#f5f5f5'\n  }\n\n  render() {\n    const items = []\n\n    const {\n      count,\n      duration,\n      defaultBaseColor,\n      defaultHighlightColor,\n      width,\n      height,\n      circle\n    } = this.props\n\n    const styleItem = {\n      '--theme-base-color': defaultBaseColor,\n      '--theme-highlight-color': defaultHighlightColor,\n      '--theme-duration': `${duration}s`\n    }\n\n    if (width != null) styleItem.width = width\n    if (height != null) styleItem.height = height\n    if (width !== null && height !== null && circle) styleItem.borderRadius = '50%'\n\n    for (let i = 0; i < count; i++) {\n      items.push(\n        <span\n          key={i}\n          className={styles.skeletonClass}\n          style={styleItem} >\n          &zwnj;\n        </span>\n      )\n    }\n\n    return <Fragment>{items}</Fragment>\n  }\n}\n","import React, { Component, Fragment } from 'react'\n\nimport Skeleton from '@grovertb/react-skeletor'\n\nexport default class App extends Component {\n  render () {\n    return (\n      <Fragment>\n        <Skeleton />\n        <Skeleton width={100} height={100} circle  />\n        <Skeleton count={4} />\n        <Skeleton width={300} height={50}  />\n      </Fragment>\n    )\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}